"""Add status to Race model

Revision ID: 96473b1a49f7
Revises: 53465fe235cb
Create Date: 2025-06-24 10:10:35.146095

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '96473b1a49f7'
down_revision = '53465fe235cb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favorite_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_favorite_races',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'race_id', name='_user_race_favorite_uc')
    )
    op.create_table('user_race_registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'race_id', name='_user_race_uc')
    )
    op.create_table('user_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'race_id', name='_user_race_score_uc')
    )
    op.create_table('official_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('selected_option_id', sa.Integer(), nullable=True),
    sa.Column('correct_slider_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['question_options.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('race_id', 'question_id', name='_race_question_uc')
    )
    op.create_table('user_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('selected_option_id', sa.Integer(), nullable=True),
    sa.Column('slider_answer_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['question_options.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'question_id', name='_user_question_uc')
    )
    op.create_table('official_answer_multiple_choice_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('official_answer_id', sa.Integer(), nullable=False),
    sa.Column('question_option_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['official_answer_id'], ['official_answers.id'], ),
    sa.ForeignKeyConstraint(['question_option_id'], ['question_options.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('official_answer_id', 'question_option_id', name='_official_answer_option_uc')
    )
    op.create_table('user_answer_multiple_choice_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_answer_id', sa.Integer(), nullable=False),
    sa.Column('question_option_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_option_id'], ['question_options.id'], ),
    sa.ForeignKeyConstraint(['user_answer_id'], ['user_answers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_answer_id', 'question_option_id', name='_user_answer_option_uc')
    )
    op.add_column('questions', sa.Column('slider_unit', sa.String(length=50), nullable=True))
    op.add_column('questions', sa.Column('slider_min_value', sa.Float(), nullable=True))
    op.add_column('questions', sa.Column('slider_max_value', sa.Float(), nullable=True))
    op.add_column('questions', sa.Column('slider_step', sa.Float(), nullable=True))
    op.add_column('questions', sa.Column('slider_points_exact', sa.Integer(), nullable=True))
    op.add_column('questions', sa.Column('slider_threshold_partial', sa.Float(), nullable=True))
    op.add_column('questions', sa.Column('slider_points_partial', sa.Integer(), nullable=True))
    op.add_column('races', sa.Column('quiniela_close_date', sa.DateTime(), nullable=True))
    op.add_column('races', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('races', sa.Column('status', sa.Enum('PLANNED', 'ACTIVE', 'ARCHIVED', name='racestatus'), nullable=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('races', 'status')
    op.drop_column('races', 'is_deleted')
    op.drop_column('races', 'quiniela_close_date')
    op.drop_column('questions', 'slider_points_partial')
    op.drop_column('questions', 'slider_threshold_partial')
    op.drop_column('questions', 'slider_points_exact')
    op.drop_column('questions', 'slider_step')
    op.drop_column('questions', 'slider_max_value')
    op.drop_column('questions', 'slider_min_value')
    op.drop_column('questions', 'slider_unit')
    op.drop_table('user_answer_multiple_choice_options')
    op.drop_table('official_answer_multiple_choice_options')
    op.drop_table('user_answers')
    op.drop_table('official_answers')
    op.drop_table('user_scores')
    op.drop_table('user_race_registrations')
    op.drop_table('user_favorite_races')
    op.drop_table('favorite_links')
    # ### end Alembic commands ###
