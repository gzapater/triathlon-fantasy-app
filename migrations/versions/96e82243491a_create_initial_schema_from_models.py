"""create_initial_schema_from_models

Revision ID: 96e82243491a
Revises:
Create Date: 2025-07-01 18:12:34.784348

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '96e82243491a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('province', sa.String(length=100), nullable=True),
    sa.Column('discipline', sa.String(length=50), nullable=True),
    sa.Column('distance', sa.String(length=100), nullable=True),
    sa.Column('source_url', sa.String(length=512), nullable=True),
    sa.Column('is_good_for_debutants', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('is_challenging', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('has_great_views', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('has_good_atmosphere', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('is_world_qualifier', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('status', sa.Enum('PENDIENTE', 'VALIDADO', 'RECHAZADO', name='eventstatus'), server_default='pendiente', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_discipline'), ['discipline'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_distance'), ['distance'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_province'), ['province'], unique=False)

    op.create_table('question_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('race_formats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('segments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('races',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('race_format_id', sa.Integer(), nullable=False),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('promo_image_url', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.Column('gender_category', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('is_general', sa.Boolean(), nullable=False),
    sa.Column('quiniela_close_date', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('PLANNED', 'ACTIVE', 'ARCHIVED', name='racestatus'), nullable=False),
    sa.Column('access_code', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['race_format_id'], ['race_formats.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_code')
    )
    op.create_table('favorite_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('question_type_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('max_score_free_text', sa.Integer(), nullable=True),
    sa.Column('is_mc_multiple_correct', sa.Boolean(), nullable=True),
    sa.Column('points_per_correct_mc', sa.Integer(), nullable=True),
    sa.Column('points_per_incorrect_mc', sa.Integer(), nullable=True),
    sa.Column('total_score_mc_single', sa.Integer(), nullable=True),
    sa.Column('points_per_correct_order', sa.Integer(), nullable=True),
    sa.Column('bonus_for_full_order', sa.Integer(), nullable=True),
    sa.Column('slider_unit', sa.String(length=50), nullable=True),
    sa.Column('slider_min_value', sa.Float(), nullable=True),
    sa.Column('slider_max_value', sa.Float(), nullable=True),
    sa.Column('slider_step', sa.Float(), nullable=True),
    sa.Column('slider_points_exact', sa.Integer(), nullable=True),
    sa.Column('slider_threshold_partial', sa.Float(), nullable=True),
    sa.Column('slider_points_partial', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_type_id'], ['question_types.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('race_segment_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('segment_id', sa.Integer(), nullable=False),
    sa.Column('distance_km', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['segment_id'], ['segments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_favorite_races',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'race_id', name='_user_race_favorite_uc')
    )
    op.create_table('user_race_registrations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'race_id', name='_user_race_uc')
    )
    op.create_table('user_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'race_id', name='_user_race_score_uc')
    )
    op.create_table('question_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option_text', sa.String(length=500), nullable=False),
    sa.Column('is_correct_mc_single', sa.Boolean(), nullable=True),
    sa.Column('is_correct_mc_multiple', sa.Boolean(), nullable=True),
    sa.Column('correct_order_index', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('official_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('selected_option_id', sa.Integer(), nullable=True),
    sa.Column('correct_slider_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['question_options.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('race_id', 'question_id', name='_race_question_uc')
    )
    op.create_table('user_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('selected_option_id', sa.Integer(), nullable=True),
    sa.Column('slider_answer_value', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['question_options.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'question_id', name='_user_question_uc')
    )
    op.create_table('official_answer_multiple_choice_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('official_answer_id', sa.Integer(), nullable=False),
    sa.Column('question_option_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['official_answer_id'], ['official_answers.id'], ),
    sa.ForeignKeyConstraint(['question_option_id'], ['question_options.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('official_answer_id', 'question_option_id', name='_official_answer_option_uc')
    )
    op.create_table('user_answer_multiple_choice_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_answer_id', sa.Integer(), nullable=False),
    sa.Column('question_option_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_option_id'], ['question_options.id'], ),
    sa.ForeignKeyConstraint(['user_answer_id'], ['user_answers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_answer_id', 'question_option_id', name='_user_answer_option_uc')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_answer_multiple_choice_options')
    op.drop_table('official_answer_multiple_choice_options')
    op.drop_table('user_answers')
    op.drop_table('official_answers')
    op.drop_table('question_options')
    op.drop_table('user_scores')
    op.drop_table('user_race_registrations')
    op.drop_table('user_favorite_races')
    op.drop_table('race_segment_details')
    op.drop_table('questions')
    op.drop_table('favorite_links')
    op.drop_table('races')
    op.drop_table('users')
    op.drop_table('segments')
    op.drop_table('roles')
    op.drop_table('race_formats')
    op.drop_table('question_types')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_province'))
        batch_op.drop_index(batch_op.f('ix_events_name'))
        batch_op.drop_index(batch_op.f('ix_events_id'))
        batch_op.drop_index(batch_op.f('ix_events_distance'))
        batch_op.drop_index(batch_op.f('ix_events_discipline'))

    op.drop_table('events')
    # ### end Alembic commands ###
